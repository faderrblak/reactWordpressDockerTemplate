http {

  server {

    listen 80 default_server;

    ### Config for localhost build. Add hash (#) below when ready for Letsencrypt setup ###

    server_name localhost;

    root   /usr/share/nginx/html;

    include  /etc/nginx/mime.types;

    location / {
      index index.html index.htm;
      default_type  application/octet-stream;
      include  /etc/nginx/mime.types;
      try_files $uri $uri.html $uri/ /index.html;
    }

    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
      expires -1;
    }

    location ^~ /.css {
        add_header  Content-Type    text/css;
    }

    location ^~ /.js {
        add_header  Content-Type    application/x-javascript;
    }

    # Any route containing a file extension (e.g. /devicesfile.js)
    location ~ ^.+\..+$ {
      try_files $uri =404;
    }

    ### Config for Letsencrypt setup. Remove hash (#) below ###

  #  server_name example.com;

  #  location / {
  #    return 301 https://$host$request_uri;
  #  }

  #  location /.well-known/acme-challenge/ {
  #    root /var/www/certbot;
  #  }

  }

  ### Config for Letsencrypt setup. Remove hash (#) below  ###
  #server {

  #  listen 443 ssl;

  #  server_name example.com;

  #  root   /usr/share/nginx/html;

  #  include  /etc/nginx/mime.types;

  #  ssl_certificate /etc/letsencrypt/live/smiledentalclinic.co.uk/fullchain.pem;
  #  ssl_certificate_key /etc/letsencrypt/live/smiledentalclinic.co.uk/privkey.pem;

  #  include /etc/letsencrypt/options-ssl-nginx.conf;
  #  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  #  location / {
  #    index index.html index.htm;
  #    default_type  application/octet-stream;
  #    include  /etc/nginx/mime.types;
  #    try_files $uri $uri.html $uri/ /index.html;
  #  }

  #  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
  #    expires -1;
  #  }

  #  location ^~ /.css {
  #      add_header  Content-Type    text/css;
  #  }

  #  location ^~ /.js {
  #      add_header  Content-Type    application/x-javascript;
  #  }

    # Any route containing a file extension (e.g. /devicesfile.js)
  #  location ~ ^.+\..+$ {
  #    try_files $uri =404;
  #  }

  #}

  server {

    listen 80;
    listen [::]:80;

    ### Config for localhost build. Add hash (#) below when ready for Letsencrypt setup ###
    server_name wordpress.localhost;
    
    index index.php index.html index.htm;

    root /var/www/html;

    include  /etc/nginx/mime.types;

    server_tokens off;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/html;
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # enable strict transport security only if you understand the implications

    location / {
      try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass wordpress:9000;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.ht {
      deny all;
    }

    location = /favicon.ico { 
      log_not_found off; access_log off; 
    }

    location = /robots.txt { 
      log_not_found off; access_log off; allow all; 
    }

    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
      expires max;
      log_not_found off;
    }

    ### Config for Letsencrypt setup. Remove hash (#) below  ###
  #  server_name wordpress.example.com;

  #  location / {
  #    return 301 https://$host$request_uri;
  #  }

  #  location /.well-known/acme-challenge/ {
  #    root /var/www/certbot;
  #  }

  }
  
  ### Config for Letsencrypt setup. Remove hash (#) below ###
  #server {
    
  #  listen 443 ssl;
  #  listen [::]:443 ssl;

  #  server_name wordpress.smiledentalclinic.co.uk;

  #  ssl_certificate /etc/letsencrypt/live/smiledentalclinic.co.uk/fullchain.pem;
  #  ssl_certificate_key /etc/letsencrypt/live/smiledentalclinic.co.uk/privkey.pem;

  #  include /etc/letsencrypt/options-ssl-nginx.conf;
  #  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  #  index index.php index.html index.htm;

  #  root /var/www/html;

  #  include  /etc/nginx/mime.types;

  #  server_tokens off;

  #  location ~ /.well-known/acme-challenge {
  #    allow all;
  #    root /var/www/html;
  #  }

  #  add_header X-Frame-Options "SAMEORIGIN" always;
  #  add_header X-XSS-Protection "1; mode=block" always;
  #  add_header X-Content-Type-Options "nosniff" always;
  #  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  #  add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # enable strict transport security only if you understand the implications

  #  location / {
  #    try_files $uri $uri/ /index.php$is_args$args;
  #  }

  #  location ~ \.php$ {
  #    try_files $uri =404;
  #    fastcgi_split_path_info ^(.+\.php)(/.+)$;
  #    fastcgi_pass wordpress:9000;
  #    fastcgi_index index.php;
  #    include fastcgi_params;
  #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  #    fastcgi_param PATH_INFO $fastcgi_path_info;
  #  }

  #  location ~ /\.ht {
  #    deny all;
  #  }

  #  location = /favicon.ico { 
  #    log_not_found off; access_log off; 
  #  }

  #  location = /robots.txt { 
  #    log_not_found off; access_log off; allow all; 
  #  }

  #  location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
  #    expires max;
  #    log_not_found off;
  #  }

  #}

}